C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TFT
OBJECT MODULE PLACED IN TFT.OBJ
COMPILER INVOKED BY: E:\2.DevelopSoft\Keil\C51\BIN\C51.EXE TFT.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "TFT.h"
   2          
   3          code  typFNT_GBK16 hz16[] = {
   4          "中",0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,0x21,0x08,0x21,0x08,0x21,0x08,
   5          0x21,0x08,0x21,0x08,0x3F,0xF8,0x21,0x08,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,/*0*/
   6          "文",0x02,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,0x10,0x10,0x10,0x10,0x08,0x20,0x08,0x20,
   7          0x04,0x40,0x02,0x80,0x01,0x00,0x02,0x80,0x04,0x40,0x08,0x20,0x30,0x18,0xC0,0x06,/*1*/
   8          "显",0x00,0x00,0x1F,0xF0,0x10,0x10,0x10,0x10,0x1F,0xF0,0x10,0x10,0x10,0x10,0x1F,0xF0,
   9          0x04,0x40,0x44,0x44,0x24,0x44,0x14,0x48,0x14,0x50,0x04,0x40,0xFF,0xFE,0x00,0x00,/*2*/
  10          "示",0x00,0x00,0x3F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFE,0x01,0x00,
  11          0x01,0x00,0x11,0x10,0x11,0x08,0x21,0x04,0x41,0x02,0x81,0x02,0x05,0x00,0x02,0x00,/*3*/
  12          "测",0x00,0x04,0x27,0xC4,0x14,0x44,0x14,0x54,0x85,0x54,0x45,0x54,0x45,0x54,0x15,0x54,
  13          0x15,0x54,0x25,0x54,0xE5,0x54,0x21,0x04,0x22,0x84,0x22,0x44,0x24,0x14,0x08,0x08,/*4*/
  14          "试",0x00,0x28,0x20,0x24,0x10,0x24,0x10,0x20,0x07,0xFE,0x00,0x20,0xF0,0x20,0x17,0xE0,
  15          0x11,0x20,0x11,0x10,0x11,0x10,0x15,0x10,0x19,0xCA,0x17,0x0A,0x02,0x06,0x00,0x02,/*5*/
  16          "全",0x01,0x00,0x01,0x00,0x02,0x80,0x04,0x40,0x08,0x20,0x10,0x10,0x2F,0xE8,0xC1,0x06,
  17          0x01,0x00,0x01,0x00,0x1F,0xF0,0x01,0x00,0x01,0x00,0x01,0x00,0x7F,0xFC,0x00,0x00,/*6*/
  18          "动",0x00,0x40,0x00,0x40,0x7C,0x40,0x00,0x40,0x01,0xFC,0x00,0x44,0xFE,0x44,0x20,0x44,
  19          0x20,0x44,0x20,0x84,0x48,0x84,0x44,0x84,0xFD,0x04,0x45,0x04,0x02,0x28,0x04,0x10,/*7*/
  20          "电",0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,
  21          0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,0x21,0x0A,0x01,0x02,0x01,0x02,0x00,0xFE,/*8*/
  22          "子",0x00,0x00,0x7F,0xF8,0x00,0x10,0x00,0x20,0x00,0x40,0x01,0x80,0x01,0x00,0xFF,0xFE,
  23          0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x05,0x00,0x02,0x00,/*9*/
  24          "欢",0x00,0x80,0x00,0x80,0xFC,0x80,0x04,0xFC,0x05,0x04,0x49,0x08,0x2A,0x40,0x14,0x40,
  25          0x10,0x40,0x28,0xA0,0x24,0xA0,0x45,0x10,0x81,0x10,0x02,0x08,0x04,0x04,0x08,0x02,/*10*/
  26          "迎",0x00,0x00,0x20,0x80,0x13,0x3C,0x12,0x24,0x02,0x24,0x02,0x24,0xF2,0x24,0x12,0x24,
  27          0x12,0x24,0x12,0xB4,0x13,0x28,0x12,0x20,0x10,0x20,0x28,0x20,0x47,0xFE,0x00,0x00,/*11*/
  28          "您",0x09,0x00,0x09,0x00,0x11,0xFC,0x32,0x04,0x54,0x48,0x99,0x50,0x11,0x48,0x12,0x44,
  29          0x14,0x44,0x11,0x40,0x10,0x80,0x02,0x00,0x51,0x04,0x51,0x12,0x90,0x12,0x0F,0xF0,/*12*/
  30          "因",0x00,0x00,0x7F,0xFC,0x40,0x04,0x41,0x04,0x41,0x04,0x41,0x04,0x5F,0xF4,0x41,0x04,
  31          0x42,0x84,0x42,0x44,0x44,0x24,0x48,0x14,0x50,0x14,0x40,0x04,0x7F,0xFC,0x40,0x04,/*13*/
  32          "为",0x01,0x00,0x21,0x00,0x11,0x00,0x11,0x00,0x01,0x00,0x7F,0xF8,0x02,0x08,0x02,0x08,
  33          0x02,0x88,0x04,0x48,0x04,0x48,0x08,0x08,0x10,0x08,0x20,0x08,0x40,0x50,0x80,0x20,/*14*/
  34          "专",0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,0x02,0x00,0x02,0x00,0xFF,0xFE,0x04,0x00,
  35          0x08,0x00,0x0F,0xF0,0x00,0x10,0x00,0x20,0x06,0x40,0x01,0x80,0x00,0x40,0x00,0x20,/*15*/
  36          "业",0x04,0x40,0x04,0x40,0x04,0x40,0x04,0x40,0x44,0x44,0x24,0x44,0x24,0x48,0x14,0x48,
  37          0x14,0x50,0x14,0x60,0x04,0x40,0x04,0x40,0x04,0x40,0x04,0x40,0xFF,0xFE,0x00,0x00,/*16*/
  38          "所",0x02,0x08,0x07,0x1C,0x38,0xE0,0x20,0x80,0x20,0x80,0x3E,0x80,0x22,0xFE,0x22,0x88,
  39          0x22,0x88,0x3E,0x88,0x20,0x88,0x20,0x88,0x41,0x08,0x41,0x08,0x82,0x08,0x04,0x08,/*17*/
  40          "以",0x00,0x10,0x04,0x10,0x22,0x10,0x21,0x10,0x21,0x10,0x20,0x10,0x20,0x10,0x20,0x20,
  41          0x20,0x20,0x20,0x20,0x24,0x40,0x28,0x50,0x30,0x88,0x21,0x04,0x02,0x02,0x04,0x02,/*18*/
  42          "注",0x00,0x80,0x20,0x40,0x10,0x00,0x17,0xFC,0x80,0x40,0x40,0x40,0x40,0x40,0x10,0x40,
  43          0x13,0xFC,0x20,0x40,0xE0,0x40,0x20,0x40,0x20,0x40,0x20,0x40,0x2F,0xFE,0x00,0x00,/*19*/
  44          "　",0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  45          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"　",20*/
  46          "大",0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,0x01,0x00,0x01,0x00,
  47          0x02,0x80,0x02,0x80,0x04,0x40,0x04,0x40,0x08,0x20,0x10,0x10,0x20,0x08,0xC0,0x06,//21
  48          "学",0x22,0x08,0x11,0x08,0x11,0x10,0x00,0x20,0x7F,0xFE,0x40,0x02,0x80,0x04,0x1F,0xE0,
  49          0x00,0x40,0x01,0x80,0xFF,0xFE,0x01,0x00,0x01,0x00,0x01,0x00,0x05,0x00,0x02,0x00,//22
  50          "生",0x01,0x00,0x11,0x00,0x11,0x00,0x11,0x00,0x3F,0xFC,0x21,0x00,0x41,0x00,0x81,0x00,
  51          0x01,0x00,0x3F,0xF8,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,0x00,0x00,//23
  52          "电",0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,
  53          0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,0x21,0x0A,0x01,0x02,0x01,0x02,0x00,0xFE,//24
  54          "子",0x00,0x00,0x7F,0xF8,0x00,0x10,0x00,0x20,0x00,0x40,0x01,0x80,0x01,0x00,0xFF,0xFE,
  55          0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x05,0x00,0x02,0x00,//25
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 2   

  56          "商",0x02,0x00,0x01,0x00,0x7F,0xFC,0x08,0x20,0x04,0x40,0x3F,0xF8,0x20,0x08,0x24,0x48,
  57          0x28,0x28,0x37,0xD8,0x24,0x48,0x24,0x48,0x27,0xC8,0x20,0x08,0x20,0x28,0x20,0x10,//26
  58          "铺",0x20,0x48,0x20,0x44,0x3B,0xFE,0x20,0x40,0x40,0x40,0x7B,0xFC,0xA2,0x44,0x22,0x44,
  59          0xFB,0xFC,0x22,0x44,0x22,0x44,0x23,0xFC,0x2A,0x44,0x32,0x44,0x22,0x54,0x02,0x08,//27    
  60          };
  61          
  62          uchar code Zk_ASCII8X16[]=
  63          {
  64            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  65            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  66            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  67            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  68            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  69            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  70            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  71            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  72            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  73            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  74            0x00,0x18,0x08,0xc8,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  75            0x00,0x00,0x00,0x7f,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0xe0,
  76            0x60,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  77            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x18,0x10,
  78            0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  79            0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x0c,0x0c,0x0c,0x00,0x00,
  80            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  81            0x00,0x00,0x00,0x00,0x00,0x6c,0x38,0x10,0x00,0x7c,0xc6,0x70,0x1c,
  82            0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x38,0x6c,0x00,0x78,
  83            0x0c,0x7c,0xcc,0xcc,0x76,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  84            0x00,0x00,0x7c,0xc6,0x70,0xc0,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,
  85            0x00,0x00,0x00,0x00,0x00,0x6c,0x96,0x7c,0xd0,0xd6,0x6c,0x00,0x00,
  86            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0x06,0x06,0xc6,
  87            0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x6c,0xc6,0xc6,0xfe,
  88            0xc6,0xc6,0x6c,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  89            0x10,0x38,0x28,0x6c,0x44,0xc6,0xc6,0x00,0x00,0x00,0x00,0x00,0x00,
  90            0x00,0x00,0x00,0x00,0x7c,0xc6,0x06,0xfe,0xc6,0x7c,0x00,0x00,0x00,
  91            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdc,0x66,0x66,0x66,0xf6,0x06,
  92            0x06,0x66,0x3c,0x00,0x00,0x00,0x00,0x6c,0x38,0xf8,0x0c,0x7e,0xc6,
  93            0xc6,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x1b,0x18,
  94            0x18,0x18,0x18,0x18,0x18,0x18,0xd8,0x70,0x00,0x00,0x00,0x00,0x00,
  95            0x00,0x00,0xfe,0x86,0x0c,0x18,0x0c,0x06,0x06,0xc6,0x7c,0x00,0x00,
  96            0x00,0x00,0x76,0xdc,0x00,0x00,0x78,0x0c,0x7c,0xcc,0xcc,0x76,0x00,
  97            0x00,0x00,0x00,0x00,0x00,0x76,0xdc,0x00,0x00,0x7c,0xc6,0x06,0x06,
  98            0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x76,0xdc,0x00,0x00,0xdc,
  99            0x66,0x66,0x66,0x66,0x66,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 100            0x00,0x00,0x76,0x99,0x9f,0x98,0x99,0x6f,0x00,0x00,0x00,0x00,0x00,
 101            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x06,0x06,
 102            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,
 103            0x66,0x66,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 104            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3c,
 105            0x3c,0x3c,0x18,0x18,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
 106            0xc6,0xc6,0xc6,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 107            0x00,0x00,0x00,0x00,0x6c,0x6c,0xfe,0x6c,0x6c,0x6c,0xfe,0x6c,0x6c,
 108            0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x7c,0xc6,0xc2,0xc0,0x7c,0x06,
 109            0x86,0xc6,0x7c,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc3,
 110            0xc6,0x0c,0x18,0x30,0x63,0xc3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 111            0x38,0x6c,0x6c,0x38,0x76,0xdc,0xcc,0xcc,0x76,0x00,0x00,0x00,0x00,
 112            0x00,0x00,0x30,0x30,0x30,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 113            0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x30,0x60,0x60,0x60,0x60,0x60,
 114            0x30,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x0c,0x06,0x06,
 115            0x06,0x06,0x06,0x0c,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 116            0x00,0x6c,0x38,0xfe,0x38,0x6c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 117            0x00,0x00,0x00,0x18,0x18,0x18,0x7e,0x18,0x18,0x18,0x00,0x00,0x00,
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 3   

 118            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,
 119            0x18,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 120            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 121            0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
 122            0x00,0x02,0x06,0x0c,0x18,0x30,0x60,0xc0,0x80,0x00,0x00,0x00,0x00,
 123            0x00,0x00,0x00,0x00,0x7c,0xc6,0xce,0xde,0xf6,0xe6,0xc6,0xc6,0x7c,
 124            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x38,0x78,0x18,0x18,0x18,
 125            0x18,0x18,0x7e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0x06,
 126            0x0c,0x18,0x30,0x60,0xc6,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 127            0x7c,0xc6,0x06,0x06,0x3c,0x06,0x06,0xc6,0x7c,0x00,0x00,0x00,0x00,
 128            0x00,0x00,0x00,0x0c,0x1c,0x3c,0x6c,0xcc,0xfe,0x0c,0x0c,0x1e,0x00,
 129            0x00,0x00,0x00,0x00,0x00,0x00,0xfe,0xc0,0xc0,0xc0,0xfc,0x06,0x06,
 130            0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x60,0xc0,0xc0,
 131            0xfc,0xc6,0xc6,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 132            0xc6,0x06,0x0c,0x18,0x30,0x30,0x30,0x30,0x00,0x00,0x00,0x00,0x00,
 133            0x00,0x00,0x7c,0xc6,0xc6,0xc6,0x7c,0xc6,0xc6,0xc6,0x7c,0x00,0x00,
 134            0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0xc6,0xc6,0x7e,0x06,0x06,0x0c,
 135            0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,
 136            0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,
 137            0x18,0x00,0x00,0x00,0x18,0x18,0x30,0x00,0x00,0x00,0x00,0x00,0x00,
 138            0x00,0x06,0x0c,0x18,0x30,0x60,0x30,0x18,0x0c,0x06,0x00,0x00,0x00,
 139            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x7e,0x00,0x00,
 140            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x30,0x18,0x0c,0x06,0x0c,
 141            0x18,0x30,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0xc6,
 142            0x0c,0x18,0x18,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 143            0x7c,0xc6,0xc6,0xde,0xde,0xde,0xdc,0xc0,0x7c,0x00,0x00,0x00,0x00,
 144            0x00,0x00,0x00,0x10,0x38,0x6c,0xc6,0xc6,0xfe,0xc6,0xc6,0xc6,0x00,
 145            0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0x66,0x66,0x66,0x7c,0x66,0x66,
 146            0x66,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x66,0xc2,0xc0,
 147            0xc0,0xc0,0xc2,0x66,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf8,
 148            0x6c,0x66,0x66,0x66,0x66,0x66,0x6c,0xf8,0x00,0x00,0x00,0x00,0x00,
 149            0x00,0x00,0xfe,0x66,0x62,0x68,0x78,0x68,0x62,0x66,0xfe,0x00,0x00,
 150            0x00,0x00,0x00,0x00,0x00,0xfe,0x66,0x62,0x68,0x78,0x68,0x60,0x60,
 151            0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x66,0xc2,0xc0,0xc0,
 152            0xde,0xc6,0x66,0x3a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,
 153            0xc6,0xc6,0xfe,0xc6,0xc6,0xc6,0xc6,0x00,0x00,0x00,0x00,0x00,0x00,
 154            0x00,0x3c,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x3c,0x00,0x00,0x00,
 155            0x00,0x00,0x00,0x00,0x1e,0x0c,0x0c,0x0c,0x0c,0x0c,0xcc,0xcc,0x78,
 156            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe6,0x66,0x6c,0x6c,0x78,0x6c,
 157            0x6c,0x66,0xe6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf0,0x60,0x60,
 158            0x60,0x60,0x60,0x62,0x66,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 159            0xc6,0xee,0xfe,0xd6,0xc6,0xc6,0xc6,0xc6,0xc6,0x00,0x00,0x00,0x00,
 160            0x00,0x00,0x00,0xc6,0xe6,0xf6,0xfe,0xde,0xce,0xc6,0xc6,0xc6,0x00,
 161            0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x6c,0xc6,0xc6,0xc6,0xc6,0xc6,
 162            0x6c,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0x66,0x66,0x66,
 163            0x7c,0x60,0x60,0x60,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,
 164            0xc6,0xc6,0xc6,0xd6,0xde,0x7c,0x0c,0x0e,0x00,0x00,0x00,0x00,0x00,
 165            0x00,0x00,0xfc,0x66,0x66,0x66,0x7c,0x6c,0x66,0x66,0xe6,0x00,0x00,
 166            0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0xc6,0x60,0x38,0x0c,0xc6,0xc6,
 167            0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7e,0x5a,0x18,0x18,0x18,
 168            0x18,0x18,0x18,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,
 169            0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,
 170            0x00,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0x6c,0x38,0x10,0x00,0x00,0x00,
 171            0x00,0x00,0x00,0x00,0xc6,0xc6,0xc6,0xc6,0xc6,0xd6,0xfe,0xee,0xc6,
 172            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,0xc6,0x6c,0x38,0x6c,
 173            0xc6,0xc6,0xc6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,0xc6,
 174            0x6c,0x38,0x38,0x38,0x38,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 175            0xfe,0xc6,0x8c,0x18,0x30,0x60,0xc2,0xc6,0xfe,0x00,0x00,0x00,0x00,
 176            0x00,0x00,0x00,0x3c,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x3c,0x00,
 177            0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xc0,0xe0,0x70,0x38,0x1c,0x0e,
 178            0x06,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x0c,0x0c,0x0c,
 179            0x0c,0x0c,0x0c,0x0c,0x3c,0x00,0x00,0x00,0x00,0x00,0x10,0x38,0x6c,
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 4   

 180            0xc6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 181            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 182            0x00,0x00,0x00,0x00,0x30,0x30,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
 183            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x0c,
 184            0x7c,0xcc,0xcc,0x76,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0x60,
 185            0x60,0x78,0x6c,0x66,0x66,0x66,0xdc,0x00,0x00,0x00,0x00,0x00,0x00,
 186            0x00,0x00,0x00,0x00,0x7c,0xc6,0xc0,0xc0,0xc6,0x7c,0x00,0x00,0x00,
 187            0x00,0x00,0x00,0x00,0x1c,0x0c,0x0c,0x3c,0x6c,0xcc,0xcc,0xcc,0x76,
 188            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0xfe,
 189            0xc0,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x36,0x32,
 190            0x30,0x7c,0x30,0x30,0x30,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 191            0x00,0x00,0x00,0x76,0xcc,0xcc,0xcc,0x7c,0x0c,0xcc,0x78,0x00,0x00,
 192            0x00,0x00,0x00,0xe0,0x60,0x60,0x6c,0x76,0x66,0x66,0x66,0xe6,0x00,
 193            0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x38,0x18,0x18,0x18,
 194            0x18,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x0e,
 195            0x06,0x06,0x06,0x06,0x66,0x66,0x3c,0x00,0x00,0x00,0x00,0x00,0xe0,
 196            0x60,0x60,0x66,0x6c,0x78,0x6c,0x66,0xe6,0x00,0x00,0x00,0x00,0x00,
 197            0x00,0x00,0x38,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x3c,0x00,0x00,
 198            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,0xfe,0xd6,0xd6,0xd6,
 199            0xd6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdc,0x66,
 200            0x66,0x66,0x66,0x66,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 201            0x00,0x7c,0xc6,0xc6,0xc6,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,
 202            0x00,0x00,0x00,0x00,0xdc,0x66,0x66,0x66,0x7c,0x60,0x60,0xf0,0x00,
 203            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x76,0xcc,0xcc,0xcc,0x7c,0x0c,
 204            0x0c,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdc,0x76,0x66,
 205            0x60,0x60,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 206            0x7c,0xc6,0x70,0x1c,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 207            0x10,0x30,0x30,0xfc,0x30,0x30,0x30,0x36,0x1c,0x00,0x00,0x00,0x00,
 208            0x00,0x00,0x00,0x00,0x00,0x00,0xcc,0xcc,0xcc,0xcc,0xcc,0x76,0x00,
 209            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,0xc6,0x6c,
 210            0x38,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,
 211            0xc6,0xc6,0xd6,0xfe,0x6c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 212            0x00,0x00,0xc6,0x6c,0x38,0x38,0x6c,0xc6,0x00,0x00,0x00,0x00,0x00,
 213            0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,0xc6,0xc6,0x7e,0x06,0x0c,0x78,
 214            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,0xcc,0x18,0x30,0x66,
 215            0xfe,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x18,0x18,0x18,0x70,
 216            0x18,0x18,0x18,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,
 217            0x18,0x18,0x00,0x18,0x18,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
 218            0x00,0x70,0x18,0x18,0x18,0x0e,0x18,0x18,0x18,0x70,0x00,0x00,0x00,
 219            0x00,0x00,0x00,0x00,0x76,0xdc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 220            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 221            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 222            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 223            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 224            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 225            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 226            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 227            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 228            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 229            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 230            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 231            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 232            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 233            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 234            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 235            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 236            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 237            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 238            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 239            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 240            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 241            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 5   

 242            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 243            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 244            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 245            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 246            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 247            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 248            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 249            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 250            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 251            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 252            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 253            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 254            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 255            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 256            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 257            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 258            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 259            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 260            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 261            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 262            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 263            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 264            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 265            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 266            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 267            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 268            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 269            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 270            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 271            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 272            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 273            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 274            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 275            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 276            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 277            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 278            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 279            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 280            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 281            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 282            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 283            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 284            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 285            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 286            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 287            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 288            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 289            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 290            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 291            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 292            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 293            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 294            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 295            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 296            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 297            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 298            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 299            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 300            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 301            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 302            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 303            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 6   

 304            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 305            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 306            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 307            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 308            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 309            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 310            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 311            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 312            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 313            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 314            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 315            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 316            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 317            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 318            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 319            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 320            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 321            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 322            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 323            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 324            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 325            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 326            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 327            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 328            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 329            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 330            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 331            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 332            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 333            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 334            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 335            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 336            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 337            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 338            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 339            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 340            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 341            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 342            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 343            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 344            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 345            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 346            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 347            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 348            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 349            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 350            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 351            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 352            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 353            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 354            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 355            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 356            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 357            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 358            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 359            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 360            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 361            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 362            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 363            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 364            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 365            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 7   

 366            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 367            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 368            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 369            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 370            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 371            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 372            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 373            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 374            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 375            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 376            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 377            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 378            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 379            0x00,0x00 
 380            };
 381          
 382          
 383          
 384          
 385          
 386          void delay_ms(uint time)
 387          {
 388   1       uint i,j;
 389   1        for(i=0;i<time;i++)
 390   1         for(j=0;j<250;j++);
 391   1      }
 392          
 393          
 394          //向SPI总线传输一个8位数据
 395          void  SPI_WriteData(uchar Data)
 396          {
 397   1              unsigned char i=0;
 398   1              for(i=8;i>0;i--)
 399   1              {
 400   2                      if(Data&0x80)   
 401   2                      sda=1; //输出数据
 402   2                      else sda=0;
 403   2                      scl=0;
 404   2                      scl=1;
 405   2                      Data<<=1;
 406   2              }
 407   1      }
 408          //向液晶屏写一个8位指令
 409          void  Lcd_WriteIndex(uchar Data)
 410          {
 411   1                      
 412   1                      cs=0;
 413   1                      rs=0;
 414   1                      SPI_WriteData(Data);            
 415   1                      cs=1;
 416   1      }
 417          //向液晶屏写一个8位数据
 418          void  Lcd_WriteData(uchar Data)
 419          {       
 420   1                      unsigned char i=0;
 421   1                      cs=0;
 422   1                      rs=1;
 423   1                      SPI_WriteData(Data);    
 424   1                      cs=1;
 425   1      }
 426          //向液晶屏写一个16位数据
 427          void  LCD_WriteData_16Bit(unsigned int Data)
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 8   

 428          {
 429   1              unsigned char i=0;
 430   1              cs=0;
 431   1              rs=1;
 432   1              SPI_WriteData(Data>>8);         //写入高8位数据
 433   1              SPI_WriteData(Data);                    //写入低8位数据
 434   1              cs=1;
 435   1      
 436   1      }
 437          
 438          void Reset()
 439          {
 440   1          reset=0;
 441   1          delay_ms(100);
 442   1          reset=1;
 443   1          delay_ms(100);
 444   1      }
 445          //////////////////////////////////////////////////////////////////////////////////////////////
 446          //液晶屏初始化 for S6D02A1
 447          void lcd_initial()
 448          {       Reset();//Reset before LCD Init.
 449   1                      
 450   1              //LCD Init For 1.44Inch LCD Panel with ST7735R.
 451   1              Lcd_WriteIndex(0x11);//Sleep exit 
 452   1              delay_ms (120);
 453   1                      
 454   1              //ST7735R Frame Rate
 455   1              Lcd_WriteIndex(0xB1); 
 456   1              Lcd_WriteData(0x01); 
 457   1              Lcd_WriteData(0x2C); 
 458   1              Lcd_WriteData(0x2D); 
 459   1      
 460   1              Lcd_WriteIndex(0xB2); 
 461   1              Lcd_WriteData(0x01); 
 462   1              Lcd_WriteData(0x2C); 
 463   1              Lcd_WriteData(0x2D); 
 464   1      
 465   1              Lcd_WriteIndex(0xB3); 
 466   1              Lcd_WriteData(0x01); 
 467   1              Lcd_WriteData(0x2C); 
 468   1              Lcd_WriteData(0x2D); 
 469   1              Lcd_WriteData(0x01); 
 470   1              Lcd_WriteData(0x2C); 
 471   1              Lcd_WriteData(0x2D); 
 472   1              
 473   1              Lcd_WriteIndex(0xB4); //Column inversion 
 474   1              Lcd_WriteData(0x07); 
 475   1              
 476   1              //ST7735R Power Sequence
 477   1              Lcd_WriteIndex(0xC0); 
 478   1              Lcd_WriteData(0xA2); 
 479   1              Lcd_WriteData(0x02); 
 480   1              Lcd_WriteData(0x84); 
 481   1              Lcd_WriteIndex(0xC1); 
 482   1              Lcd_WriteData(0xC5); 
 483   1      
 484   1              Lcd_WriteIndex(0xC2); 
 485   1              Lcd_WriteData(0x0A); 
 486   1              Lcd_WriteData(0x00); 
 487   1      
 488   1              Lcd_WriteIndex(0xC3); 
 489   1              Lcd_WriteData(0x8A); 
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 9   

 490   1              Lcd_WriteData(0x2A); 
 491   1              Lcd_WriteIndex(0xC4); 
 492   1              Lcd_WriteData(0x8A); 
 493   1              Lcd_WriteData(0xEE); 
 494   1              
 495   1              Lcd_WriteIndex(0xC5); //VCOM 
 496   1              Lcd_WriteData(0x0E); 
 497   1              
 498   1              Lcd_WriteIndex(0x36); //MX, MY, RGB mode 
 499   1      #ifdef USE_LANDSCAPE
                      Lcd_WriteData(0xA8); //竖屏C8 横屏08 A8
              #else
 502   1              Lcd_WriteData(0xC8); //竖屏C8 横屏08 A8
 503   1      #endif          
 504   1              //ST7735R Gamma Sequence
 505   1              Lcd_WriteIndex(0xe0); 
 506   1              Lcd_WriteData(0x0f); 
 507   1              Lcd_WriteData(0x1a); 
 508   1              Lcd_WriteData(0x0f); 
 509   1              Lcd_WriteData(0x18); 
 510   1              Lcd_WriteData(0x2f); 
 511   1              Lcd_WriteData(0x28); 
 512   1              Lcd_WriteData(0x20); 
 513   1              Lcd_WriteData(0x22); 
 514   1              Lcd_WriteData(0x1f); 
 515   1              Lcd_WriteData(0x1b); 
 516   1              Lcd_WriteData(0x23); 
 517   1              Lcd_WriteData(0x37); 
 518   1              Lcd_WriteData(0x00);    
 519   1              Lcd_WriteData(0x07); 
 520   1              Lcd_WriteData(0x02); 
 521   1              Lcd_WriteData(0x10); 
 522   1      
 523   1              Lcd_WriteIndex(0xe1); 
 524   1              Lcd_WriteData(0x0f); 
 525   1              Lcd_WriteData(0x1b); 
 526   1              Lcd_WriteData(0x0f); 
 527   1              Lcd_WriteData(0x17); 
 528   1              Lcd_WriteData(0x33); 
 529   1              Lcd_WriteData(0x2c); 
 530   1              Lcd_WriteData(0x29); 
 531   1              Lcd_WriteData(0x2e); 
 532   1              Lcd_WriteData(0x30); 
 533   1              Lcd_WriteData(0x30); 
 534   1              Lcd_WriteData(0x39); 
 535   1              Lcd_WriteData(0x3f); 
 536   1              Lcd_WriteData(0x00); 
 537   1              Lcd_WriteData(0x07); 
 538   1              Lcd_WriteData(0x03); 
 539   1              Lcd_WriteData(0x10);  
 540   1              
 541   1              Lcd_WriteIndex(0x2a);
 542   1              Lcd_WriteData(0x00);
 543   1              Lcd_WriteData(0x00+2);
 544   1              Lcd_WriteData(0x00);
 545   1              Lcd_WriteData(0x80+2);
 546   1      
 547   1              Lcd_WriteIndex(0x2b);
 548   1              Lcd_WriteData(0x00);
 549   1              Lcd_WriteData(0x00+3);
 550   1              Lcd_WriteData(0x00);
 551   1              Lcd_WriteData(0x80+3);
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 10  

 552   1              
 553   1              Lcd_WriteIndex(0xF0); //Enable test command  
 554   1              Lcd_WriteData(0x01); 
 555   1              Lcd_WriteIndex(0xF6); //Disable ram power save mode 
 556   1              Lcd_WriteData(0x00); 
 557   1              
 558   1              Lcd_WriteIndex(0x3A); //65k mode 
 559   1              Lcd_WriteData(0x05); 
 560   1              
 561   1              
 562   1              Lcd_WriteIndex(0x29);//Display on
 563   1      
 564   1      }
 565          
 566          
 567          
 568          /*************************************************
 569          函数名：LCD_Set_Region
 570          功能：设置lcd显示区域，在此区域写点数据自动换行
 571          入口参数：xy起点和终点
 572          返回值：无
 573          *************************************************/
 574          void Lcd_SetRegion(unsigned int x_start,unsigned int y_start,unsigned int x_end,unsigned int y_end)
 575          {       
 576   1      #ifdef USE_LANDSCAPE//使用横屏模式
                      Lcd_WriteIndex(0x2a);
                      Lcd_WriteData(0x00);
                      Lcd_WriteData(x_start+3);
                      Lcd_WriteData(0x00);
                      Lcd_WriteData(x_end+3);
              
                      Lcd_WriteIndex(0x2b);
                      Lcd_WriteData(0x00);
                      Lcd_WriteData(y_start+2);
                      Lcd_WriteData(0x00);
                      Lcd_WriteData(y_end+2);
              
              #else//竖屏模式 
 590   1              Lcd_WriteIndex(0x2a);
 591   1              Lcd_WriteData(0x00);
 592   1              Lcd_WriteData(x_start+2);
 593   1              Lcd_WriteData(0x00);
 594   1              Lcd_WriteData(x_end+2);
 595   1      
 596   1              Lcd_WriteIndex(0x2b);
 597   1              Lcd_WriteData(0x00);
 598   1              Lcd_WriteData(y_start+3);
 599   1              Lcd_WriteData(0x00);
 600   1              Lcd_WriteData(y_end+3); 
 601   1      #endif
 602   1              Lcd_WriteIndex(0x2c);
 603   1      }
 604          
 605          
 606          void PutPixel(uint x_start,uint y_start,uint color)
 607          {
 608   1              Lcd_SetRegion(x_start,y_start,x_start+1,y_start+1);
 609   1              LCD_WriteData_16Bit(color);
 610   1              
 611   1      }
 612          
 613          
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 11  

 614          
 615          void dsp_single_colour(int color)
 616          {
 617   1              uchar i,j;
 618   1              Lcd_SetRegion(0,0,128-1,128-1);
 619   1              for (i=0;i<128;i++)
 620   1              for (j=0;j<128;j++)
 621   1                      LCD_WriteData_16Bit(color);
 622   1      }
 623          
 624          
 625          //显示一个英文字符,带前景色和背景色设定
 626          void Display_ASCII8X16_Color(uint x0,uint y0,uchar *s,uint forecolor,uint backgroundcolor)
 627          {
 628   1              int i,j,k,x,y,xx;
 629   1              
 630   1              unsigned char qm;
 631   1              
 632   1              long int ulOffset;
 633   1              
 634   1              char xdata ywbuf[32],temp[2];
 635   1              
 636   1              for(i = 0; i<strlen((char*)s);i++)
 637   1              {
 638   2                      if(((unsigned char)(*(s+i))) >= 161)
 639   2                      {
 640   3                              temp[0] = *(s+i);
 641   3                              temp[1] = '\0';
 642   3                              return;
 643   3                      }
 644   2                      else
 645   2                      {
 646   3                              qm = *(s+i);
 647   3                              
 648   3                              ulOffset = (long int)(qm) * 16;
 649   3                              
 650   3                              for (j = 0; j < 16; j ++)
 651   3                              {
 652   4                                      ywbuf[j]=Zk_ASCII8X16[ulOffset+j];
 653   4                              }
 654   3                              
 655   3                              for(y = 0;y < 16;y++)
 656   3                              {
 657   4                                      for(x=0;x<8;x++) 
 658   4                                      {
 659   5                                              k=x % 8;
 660   5                                              
 661   5                                              if(ywbuf[y]&(0x80 >> k))
 662   5                                              {
 663   6                                                      xx=x0+x+i*8;
 664   6                                                      PutPixel(xx,y+y0,forecolor);
 665   6                                              }
 666   5                                              else
 667   5                                              {
 668   6                                                      xx=x0+x+i*8;
 669   6                                                      PutPixel(xx,y+y0,backgroundcolor);      
 670   6                                              }
 671   5                      
 672   5                                      }
 673   4                              }
 674   3                      
 675   3                      }
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 12  

 676   2              }       
 677   1      }
 678          
 679          //显示一个英文字符
 680          void Display_ASCII8X16(uint x0,uint y0,uchar *s)
 681          {
 682   1              int i,j,k,x,y,xx;
 683   1              
 684   1              unsigned char qm;
 685   1              
 686   1              long int ulOffset;
 687   1              
 688   1              char  xdata ywbuf[32],temp[2];
 689   1              
 690   1              for(i = 0; i<strlen((char*)s);i++)
 691   1              {
 692   2                      if(((unsigned char)(*(s+i))) >= 161)
 693   2                      {
 694   3                              temp[0] = *(s+i);
 695   3                              temp[1] = '\0';
 696   3                              return;
 697   3                      }
 698   2                      else
 699   2                      {
 700   3                              qm = *(s+i);
 701   3                              
 702   3                              ulOffset = (long int)(qm) * 16;
 703   3                              
 704   3                              for (j = 0; j < 16; j ++)
 705   3                              {
 706   4                                      ywbuf[j]=Zk_ASCII8X16[ulOffset+j];
 707   4                              }
 708   3                              
 709   3                              for(y = 0;y < 16;y++)
 710   3                              {
 711   4                                      for(x=0;x<8;x++) 
 712   4                                      {
 713   5                                              k=x % 8;
 714   5                                              
 715   5                                              if(ywbuf[y]&(0x80 >> k))
 716   5                                              {
 717   6                                                      xx=x0+x+i*8;
 718   6                                                      PutPixel(xx,y+y0,RED);
 719   6                                              }
 720   5      //                                      else      //会不会背景色覆盖未填充区域
 721   5      //                                      {
 722   5      //                                              xx=x0+x+i*8;
 723   5      //                                              PutPixel(xx,y+y0,WHITE);        
 724   5      //                                      }
 725   5                      
 726   5                                      }
 727   4                              }
 728   3                      
 729   3                      }
 730   2              }       
 731   1      }
 732          
 733          //采用设置窗口方法填充字库数据，相比Gui_DrawFont_GBK16更快速
 734          void Fast_DrawFont_GBK16(uint x, uint y, uint fc, uint bc, uchar *s)
 735          {
 736   1              unsigned char i,j;
 737   1              unsigned short k;
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 13  

 738   1              uint HZnum;
 739   1              HZnum=sizeof(hz16)/sizeof(typFNT_GBK16);
 740   1              while(*s) 
 741   1              {       
 742   2                      if((*s) >= 128) 
 743   2                      {               
 744   3                              for (k=0;k<HZnum;k++) 
 745   3                              {
 746   4                                if ((hz16[k].Index[0]==*(s))&&(hz16[k].Index[1]==*(s+1)))
 747   4                                {     Lcd_SetRegion(x,y,x+16-1,y+16-1);
 748   5                                          for(i=0;i<16*2;i++)
 749   5                                          {
 750   6                                                      for(j=0;j<8;j++)
 751   6                                              {
 752   7                                                              if(hz16[k].Msk[i]&(0x80>>j))    LCD_WriteData_16Bit(fc);
 753   7                                                              else 
 754   7                                                              {
 755   8                                                              if (fc!=bc) LCD_WriteData_16Bit(bc);
 756   8                                                              }
 757   7                                                      }
 758   6                                              }
 759   5                                              
 760   5                                              
 761   5                                      }
 762   4                              }
 763   3                      s+=2;x+=16;
 764   3                      }
 765   2                              
 766   2                      
 767   2                      else
 768   2                      s+=1; 
 769   2                      
 770   2              }
 771   1      }
 772          
 773          //此方法描绘汉字较慢
 774          void Gui_DrawFont_GBK16(uint x, uint y, uint fc, uint bc, uchar *s)
 775          {
 776   1              unsigned char i,j;
 777   1              unsigned short k,x0;
 778   1              x0=x;
 779   1      
 780   1              while(*s) 
 781   1              {       
 782   2                      if((*s) >= 128) 
 783   2                      {               
 784   3                              for (k=0;k<hz16_num;k++) 
 785   3                              {
 786   4                                if ((hz16[k].Index[0]==*(s))&&(hz16[k].Index[1]==*(s+1)))
 787   4                                { 
 788   5                                          for(i=0;i<16;i++)
 789   5                                          {
 790   6                                                      for(j=0;j<8;j++) 
 791   6                                                              {
 792   7                                                              if(hz16[k].Msk[i*2]&(0x80>>j))  PutPixel(x+j,y+i,fc);
 793   7                                                                      else {
 794   8                                                                              if (fc!=bc) PutPixel(x+j,y+i,bc);
 795   8                                                                      }
 796   7                                                              }
 797   6                                                      for(j=0;j<8;j++) 
 798   6                                                              {
 799   7                                                              if(hz16[k].Msk[i*2+1]&(0x80>>j))        PutPixel(x+j+8,y+i,fc);
C51 COMPILER V9.00   TFT                                                                   05/08/2016 10:27:04 PAGE 14  

 800   7                                                                      else 
 801   7                                                                      {
 802   8                                                                              if (fc!=bc) PutPixel(x+j+8,y+i,bc);
 803   8                                                                      }
 804   7                                                              }
 805   6                                          }
 806   5                                      }
 807   4                                }
 808   3                              s+=2;x+=16;
 809   3                      }
 810   2                      else
 811   2                      s+=1; 
 812   2                      
 813   2              }
 814   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2203    ----
   CONSTANT SIZE    =   5049    ----
   XDATA SIZE       =   ----      68
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      86
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
